name: CI/CD for Symfony Project

run-name: ${{ github.actor }} is testing out GitHub Actions 🚀

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

      - name: Set up Node.js 16.x
        uses: ./
        with:
          node-version: '16.x'

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /root/.composer
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      - name: Build and test
        run: |
          docker-compose build --build-arg PHP_VERSION=8.1 --build-arg NGINX_VERSION=1.23.3
          docker-compose run app php bin/phpunit

      - name: Check code quality (optional)
        run: docker-compose run app php vendor/bin/phpstan analyze --level=2

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only deploy when pushing to the main branch

    steps:
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: your-heroku-app-name
